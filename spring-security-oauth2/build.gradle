/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext{
        //Plugins
        springBootVersion = '2.6.1'

        //Libraries
        webauthn4jVersion = '0.18.1.RELEASE'
        springSecurityVersion = '5.6.0'
        hibernateValidatorVersion = '6.2.0.Final'
        thymeleafVersion = '3.0.4.RELEASE'

        bootstrapVersion = '5.1.3'
        jqueryVersion = '3.6.0'
        fontAwesomeVersion = '5.15.4'
        webjarsLocatorVersion = '0.42'

        webDriverManagerVersion = '5.0.3'
        // To use WebAuthn WebDriver extension, alpha release is used here.
        // When stable version is released, and Spring Boot BOM includes it, this need to be removed.
        seleniumVersion = '4.1.0'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }

}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

group 'com.webauthn4j'
description = "WebAuthn4J Spring Security Authorization Server Sample"

sourceCompatibility = 1.8

bootJar {
    baseName = "webauthn4j-spring-security-sample-auth-server"
    version = null
}

// Log4Shell CVE-2021-44228
ext['log4j2.version'] = '2.17.0'

dependencies {
    implementation ('com.webauthn4j:webauthn4j-spring-security-core:0.7.3.RELEASE')

    // Spring Framework
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation platform("org.springframework.security:spring-security-bom:${springSecurityVersion}")
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.1')
    implementation('org.springframework.security:spring-security-jwt:1.1.1.RELEASE')

    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor")
    implementation("org.hibernate:hibernate-validator:$hibernateValidatorVersion")

    // Others
    implementation("org.slf4j:jcl-over-slf4j")
    implementation('ch.qos.logback:logback-classic')
    implementation('javax.xml.bind:jaxb-api')
    implementation('org.thymeleaf:thymeleaf-spring5')
    implementation('com.nimbusds:nimbus-jose-jwt:9.15.2')
    implementation("org.webjars:bootstrap:$bootstrapVersion")
    implementation("org.webjars:jquery:$jqueryVersion")
    implementation("org.webjars:font-awesome:$fontAwesomeVersion")
    implementation("org.webjars:webjars-locator:$webjarsLocatorVersion")

    // Test
    testImplementation('junit:junit')
    testImplementation('org.mockito:mockito-core')
    testImplementation('org.assertj:assertj-core')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation("com.webauthn4j:webauthn4j-test:$webauthn4jVersion")
    testImplementation("io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion")
    testImplementation("org.seleniumhq.selenium:selenium-java:$seleniumVersion")

}

test {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}
